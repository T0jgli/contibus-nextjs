name: Build & Deploy

on:
    push:
        branches: [main]

jobs:
    e2e-tests:
        runs-on: ubuntu-latest
        steps:
            - name: "Check out"
              uses: actions/checkout@v3
            - name: Use Node.js 16
              uses: actions/setup-node@v3
              with:
                  node-version: 16
                  cache: "npm"
            - name: Cache dependencies
              id: cache
              uses: actions/cache@v2
              with:
                  path: ./node_modules
                  key: modules-${{ hashFiles('yarn.lock') }}
            - name: Install dependencies
              if: steps.cache.outputs.cache-hit != 'true'
              run: yarn
            - run: yarn run e2e
              env: ${{ secrets.ENV_FILE }}
    build:
        needs: e2e-tests
        runs-on: ubuntu-latest
        steps:
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v2
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2
            - name: Login to Docker Hub
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Build and push
              uses: docker/build-push-action@v3
              with:
                  push: true
                  tags: contibus/web:latest
                  build-args: ${{ secrets.ENV_FILE }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
    deploy:
        needs: build
        runs-on: ubuntu-latest
        steps:
            - name: Deploy app
              uses: appleboy/ssh-action@v0.1.2
              with:
                  host: ${{secrets.SSH_HOST}}
                  key: ${{secrets.SSH_KEY}}
                  username: ${{secrets.SSH_USERNAME}}

                  script: |
                      cd /home/ubuntu
                      cd contibus
                      git pull
                      sudo docker --config ~/.contibus compose pull contibus
                      sudo docker --config ~/.contibus compose up -d
