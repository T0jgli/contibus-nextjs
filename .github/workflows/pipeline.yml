name: Build & Deploy

on:
    push:
        branches: [main]

jobs:
    e2e-tests:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Create env file
              run: |
                  echo "${{ secrets.ENV_FILE }}" > .env
            - name: Cypress run
              uses: cypress-io/github-action@v5
              with:
                  browser: chrome
                  install-command: yarn --frozen-lockfile --silent --legacy-peer-deps
                  start: yarn run dev
                  wait-on: "http://localhost:3001"
    build:
        needs: e2e-tests
        runs-on: ubuntu-latest
        permissions:
            id-token: write
            contents: read
            packages: write
        outputs:
            image: ${{ steps.build-image.outputs.digest }}
        steps:
            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  role-to-assume: arn:aws:iam::574681690878:role/githubRole
                  aws-region: eu-central-1
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v2
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2
            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v2
            - name: Build and push
              id: build-image
              uses: docker/build-push-action@v3
              with:
                  push: true
                  tags: ${{ steps.login-ecr.outputs.registry }}/contibus:latest
                  build-args: ${{ secrets.ENV_FILE }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
            # - name: Login to Docker Hub
            #   uses: docker/login-action@v2
            #   with:
            #       username: ${{ secrets.DOCKERHUB_USERNAME }}
            #       password: ${{ secrets.DOCKERHUB_TOKEN }}
            # - name: Build and push
            #   id: build-image
            #   uses: docker/build-push-action@v3
            #   with:
            #       push: true
            #       tags: contibus/web:latest
            #       build-args: ${{ secrets.ENV_FILE }}
            #       cache-from: type=gha
            #       cache-to: type=gha,mode=max
    deploy:
        needs: build
        runs-on: ubuntu-latest
        permissions:
            id-token: write
            contents: read
        steps:
            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  role-to-assume: arn:aws:iam::574681690878:role/githubRole
                  aws-region: eu-central-1
            - name: Download task definition
              run: |
                  aws ecs describe-task-definition --task-definition contibus --query taskDefinition > task-definition.json
                  echo $(cat task-definition.json | jq 'del(
                            .taskDefinitionArn,
                            .requiresAttributes,
                            .compatibilities,
                            .revision,
                            .status,
                            .registeredAt,
                            .registeredBy
                        )') > task-definition.json
            - name: Fill in the new image ID in the Amazon ECS task definition
              id: task-def
              uses: aws-actions/amazon-ecs-render-task-definition@v1
              with:
                  task-definition: task-definition.json
                  container-name: contibus
                  image: contibus/web@${{ needs.build.outputs.image }}
            - name: Deploy Amazon ECS task definition
              uses: aws-actions/amazon-ecs-deploy-task-definition@v1
              with:
                  task-definition: ${{ steps.task-def.outputs.task-definition }}
                  service: contibus-
                  cluster: neoline
                  wait-for-service-stability: false

            # - name: Deploy app
            #   uses: appleboy/ssh-action@v0.1.2
            #   with:
            #       host: ${{secrets.SSH_HOST}}
            #       key: ${{secrets.SSH_KEY}}
            #       username: ${{secrets.SSH_USERNAME}}

            #       script: |
            #           cd /home/github
            #           cd contibus
            #           git pull
            #           docker --config ~/.contibus compose pull contibus
            #           docker --config ~/.contibus compose up -d
